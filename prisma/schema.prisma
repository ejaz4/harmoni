// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id              String          @id @default(uuid())
  username        String          @unique
  name            String?
  profileImageUrl String?
  password        String
  createdAt       DateTime        @default(now())
  updatedAt       DateTime        @updatedAt
  admin           Boolean         @default(false)
  dataProcessing  Boolean         @default(false)
  History         PlaylistEntry[]
  Playlist        Playlist[]
  Tokens          Token[]
}

model Token {
  id         String   @id
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  User       User     @relation(fields: [userId], references: [id])
  userId     String
  validUntil DateTime
  valid      Boolean  @default(true)
  secure     Boolean? @default(false)
}

model Playlist {
  id            String          @id @default(uuid())
  name          String
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  creator       User            @relation(fields: [creatorId], references: [id])
  autogenerated Boolean         @default(false)
  creatorId     String
  visibility    String          @default("private")
  PlaylistEntry PlaylistEntry[]
}

model PlaylistEntry {
  id         Int      @id @default(autoincrement())
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  playlist   Playlist @relation(fields: [playlistId], references: [id])
  playlistId String
  song       Song     @relation(fields: [songId], references: [id])
  songId     String
  User       User?    @relation(fields: [userId], references: [id])
  userId     String?
}

model Artist {
  id        String   @id @unique @default(uuid())
  youtubeId String?  @unique
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Album     Album[]
  Song      Song[]
}

model Album {
  id           String   @id @unique @default(uuid())
  youtubeId    String?  @unique
  name         String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  thumbnailUrl String?
  Song         Song[]
  Artist       Artist[]
  artistId     String?
}

model Song {
  id            String          @id @default(uuid())
  youtubeId     String?         @unique
  name          String
  createdAt     DateTime        @default(now())
  isExplicit    Boolean         @default(false)
  duration      Int             @default(0)
  updatedAt     DateTime        @updatedAt
  thumbnailUrl  String?
  PlaylistEntry PlaylistEntry[]

  Artist   Artist[]
  artistId String?

  Album   Album?  @relation(fields: [albumId], references: [id])
  albumId String?
}
